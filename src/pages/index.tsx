import { Content } from '@/components/Content/Content';
import { CONTENT } from '@/content/home';
import { Box, Flex, GridItem } from '@chakra-ui/react';
import type { NextPage, NextPageContext } from 'next';
import Head from 'next/head';
import Image from 'next/image';
import React from 'react';
import { AnimatedDots } from '@/components/AnimatedDots/AnimatedDots';

interface IHomeProps {
  isMobile: boolean;
}

const Home: NextPage<IHomeProps> = ({ isMobile }) => {
  const contentRef = React.useRef<Map<string, HTMLDivElement> | null>(null);

  const getMap = () => {
    if (!contentRef.current) {
      // Initialize the Map on first usage.
      contentRef.current = new Map();
    }

    return contentRef.current;
  };

  const getNodeById = (id: string) => {
    return getMap().get(id);
  };

  const scrollIntoView = (id: string) => {
    const node = getNodeById(id);

    node?.scrollIntoView({
      behavior: 'smooth',
    });
  };

  return (
    <Box>
      <Head>
        <title>Home</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      {CONTENT.map(
        ({ id, title, image, description, subTitle, CTAS }, index) => {
          const isOdd = index % 2 === 0;

          const handleRef = (node: HTMLDivElement) => {
            const map = getMap();
            if (node && id) {
              map.set(id, node);
            } else {
              map.delete(id);
            }
          };

          return (
            <Flex
              data-testid={id}
              key={id}
              height="calc(100vh - 76px)"
              ref={handleRef}
              direction={['column-reverse', 'row']}
            >
              <GridItem
                w="full"
                bgColor={isOdd ? 'gray.50' : 'teal.400'}
                position="relative"
              >
                {!isOdd && <AnimatedDots isMobile={isMobile} />}
                <Content
                  CTAS={CTAS}
                  description={description}
                  title={title}
                  subTitle={subTitle}
                  scrollIntoView={scrollIntoView}
                  nextIndex={index + 1}
                  isLast={CONTENT.length - 1 === index}
                />
              </GridItem>
              <GridItem position="relative" w="full" h="full">
                <Image
                  fill
                  src={image.src}
                  alt={image.alt}
                  priority
                  style={{ objectFit: 'cover' }}
                />
              </GridItem>
            </Flex>
          );
        }
      )}
    </Box>
  );
};

Home.getInitialProps = async ({ req }: NextPageContext) => {
  const userAgent = req ? req.headers['user-agent'] : navigator.userAgent;
  const isMobile = Boolean(
    userAgent?.match(
      /Android|Blackberry|iPhone|iPad|iPod|Opera Mini|IEMobile|WPDesktop/i
    )
  );

  return { isMobile };
};

export default Home;
